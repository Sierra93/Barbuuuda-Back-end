// <auto-generated />
using System;
using Barbuuuda.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Barbuuuda.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210225200556_AddTableQuestions")]
    partial class AddTableQuestions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Barbuuuda.Models.Entities.Executor.AnswerVariant", b =>
                {
                    b.Property<int>("AnswerVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnswerVariantId")
                        .UseIdentityColumn();

                    b.Property<string>("AnswerVariantText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnswerVariantText");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("bit")
                        .HasColumnName("IsTrue");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionId");

                    b.HasKey("AnswerVariantId");

                    b.ToTable("AnswerVariants", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.Entities.Executor.QuestionEntity", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionId")
                        .UseIdentityColumn();

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("QuestionText");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.Logger.LoggerEntity", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exception");

                    b.Property<string>("LogLvl")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("log_lvl");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stack_trace");

                    b.Property<string>("TypeException")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("type_exception");

                    b.HasKey("LogId");

                    b.ToTable("Logs", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.MainPage.AdvantageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("MainTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("main_title");

                    b.Property<string>("SecondTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("second_title");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.ToTable("Advantages", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.MainPage.FonEntity", b =>
                {
                    b.Property<int>("FonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fon_id")
                        .UseIdentityColumn();

                    b.Property<string>("BtnText")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("btn-text");

                    b.Property<string>("MainTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("main_title");

                    b.Property<string>("SecondTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("second_title");

                    b.HasKey("FonId");

                    b.ToTable("Fons", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.MainPage.HopeEntity", b =>
                {
                    b.Property<int>("HopeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hope_id")
                        .UseIdentityColumn();

                    b.Property<string>("HopeDetails")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("hope_details");

                    b.Property<string>("HopeTitle")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("hope_title");

                    b.HasKey("HopeId");

                    b.ToTable("Hopes", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.MainPage.PrivilegeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Privileges", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.MainPage.WhyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("MainTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("main_titie");

                    b.Property<string>("SecondTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("second_title");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.ToTable("Whies", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.MainPage.WorkEntity", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("work_id")
                        .UseIdentityColumn();

                    b.Property<string>("BlockText")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("block_text");

                    b.Property<string>("BlockTitle")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("block_title");

                    b.Property<string>("MainTitle")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("main_title");

                    b.Property<string>("SecondTitle")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("second_title");

                    b.HasKey("WorkId");

                    b.ToTable("Works", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.Task.TaskCategoryEntity", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryCode")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("category_code");

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("category_name");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("CategoryId");

                    b.ToTable("TaskCategories", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.Task.TaskStatusEntity", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status_id")
                        .UseIdentityColumn();

                    b.Property<string>("StatusCode")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status_code");

                    b.Property<string>("StatusName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status_name");

                    b.HasKey("StatusId");

                    b.ToTable("TaskStatuses", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.Task.TaskTypeEntity", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_id")
                        .UseIdentityColumn();

                    b.Property<string>("TypeCode")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type_code");

                    b.Property<string>("TypeName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type_name");

                    b.HasKey("TypeId");

                    b.ToTable("TaskTypes", "dbo");
                });

            modelBuilder.Entity("Barbuuuda.Models.User.HeaderTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("HeaderField")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("header_field");

                    b.Property<string>("HeaderIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("header_icon");

                    b.Property<string>("HeaderType")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("header_type");

                    b.Property<bool>("IsProfile")
                        .HasColumnType("bit")
                        .HasColumnName("is_profile");

                    b.Property<string>("ProfileField")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("profile_field");

                    b.HasKey("Id");

                    b.ToTable("Headers", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
